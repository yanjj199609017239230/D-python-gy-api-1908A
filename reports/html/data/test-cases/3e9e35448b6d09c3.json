{
  "uid" : "3e9e35448b6d09c3",
  "name" : "修改密码",
  "fullName" : "test_case.test_liu_cheng#test_liu_cheng3",
  "historyId" : "4101fcabc0c80f05a09cd81d69a815dc",
  "time" : {
    "start" : 1568281062626,
    "stop" : 1568281062723,
    "duration" : 97
  },
  "status" : "failed",
  "statusDetails" : {
    "message" : "AssertionError",
    "trace" : "@allure.title('修改密码')\n    def test_liu_cheng3():\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + '/user/changepwd'\n        pwd = random_tool.random_pwd()\n        req = {\n            \"newPwd\": \"bgks12wfg2\",\n            \"oldPwd\": \"bgks12wfg2\",\n            \"reNewPwd\": \"bgks12wfg2\",\n            \"userName\": ['user_name']\n        }\n        a = {\"token\":d[\"token\"]}\n    \n        resp = request_tool.post_request(url, json=req, headers=a)\n        body = resp.json()\n        # 判断响应码\n>       assert_tool.assert_equal(resp.status_code, 200)\n\ntest_case\\test_liu_cheng.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbody = 400, expected_msg = 200\n\n    def assert_equal(body, expected_msg):\n        \"\"\"\n        验证response body中是否等于预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n>           assert body == expected_msg\nE           AssertionError\n\nvenv\\lib\\site-packages\\tools\\assert_tool.py:35: AssertionError",
    "flaky" : false
  },
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusDetails" : {
      "message" : "AssertionError",
      "trace" : "@allure.title('修改密码')\n    def test_liu_cheng3():\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + '/user/changepwd'\n        pwd = random_tool.random_pwd()\n        req = {\n            \"newPwd\": \"bgks12wfg2\",\n            \"oldPwd\": \"bgks12wfg2\",\n            \"reNewPwd\": \"bgks12wfg2\",\n            \"userName\": ['user_name']\n        }\n        a = {\"token\":d[\"token\"]}\n    \n        resp = request_tool.post_request(url, json=req, headers=a)\n        body = resp.json()\n        # 判断响应码\n>       assert_tool.assert_equal(resp.status_code, 200)\n\ntest_case\\test_liu_cheng.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbody = 400, expected_msg = 200\n\n    def assert_equal(body, expected_msg):\n        \"\"\"\n        验证response body中是否等于预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n>           assert body == expected_msg\nE           AssertionError\n\nvenv\\lib\\site-packages\\tools\\assert_tool.py:35: AssertionError",
      "flaky" : false
    },
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9ddbe3188e317888",
      "name" : "请求",
      "source" : "9ddbe3188e317888.txt",
      "type" : "text/plain",
      "size" : 429
    }, {
      "uid" : "b58b7192d8183bad",
      "name" : "响应",
      "source" : "b58b7192d8183bad.txt",
      "type" : "text/plain",
      "size" : 674
    }, {
      "uid" : "df12214453e657a4",
      "name" : "log",
      "source" : "df12214453e657a4.txt",
      "type" : "text/plain",
      "size" : 2019
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_liu_cheng"
  }, {
    "name" : "subSuite"
  }, {
    "name" : "host",
    "value" : "SKY-20190805LNB"
  }, {
    "name" : "thread",
    "value" : "10056-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_liu_cheng"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "extra" : {
    "tags" : [ ]
  },
  "source" : "3e9e35448b6d09c3.json",
  "statusDetailsSafe" : {
    "message" : "AssertionError",
    "trace" : "@allure.title('修改密码')\n    def test_liu_cheng3():\n        # config/conf.py里面配置GY_API_URL,模板快捷键demo_conf_api\n        url = conf.GY_API_URL + '/user/changepwd'\n        pwd = random_tool.random_pwd()\n        req = {\n            \"newPwd\": \"bgks12wfg2\",\n            \"oldPwd\": \"bgks12wfg2\",\n            \"reNewPwd\": \"bgks12wfg2\",\n            \"userName\": ['user_name']\n        }\n        a = {\"token\":d[\"token\"]}\n    \n        resp = request_tool.post_request(url, json=req, headers=a)\n        body = resp.json()\n        # 判断响应码\n>       assert_tool.assert_equal(resp.status_code, 200)\n\ntest_case\\test_liu_cheng.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nbody = 400, expected_msg = 200\n\n    def assert_equal(body, expected_msg):\n        \"\"\"\n        验证response body中是否等于预期字符串\n        :param body:\n        :param expected_msg:\n        :return:\n        \"\"\"\n        try:\n>           assert body == expected_msg\nE           AssertionError\n\nvenv\\lib\\site-packages\\tools\\assert_tool.py:35: AssertionError",
    "flaky" : false
  },
  "statusMessage" : {
    "present" : true
  },
  "parameterValues" : [ ]
}